// automatically generated by the FlatBuffers compiler, do not modify

package fast_.Graph_;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ContextGraph extends Table {
  public static ContextGraph getRootAsContextGraph(ByteBuffer _bb) { return getRootAsContextGraph(_bb, new ContextGraph()); }
  public static ContextGraph getRootAsContextGraph(ByteBuffer _bb, ContextGraph obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ContextGraph __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ContextEdges edges() { return edges(new ContextEdges()); }
  public ContextEdges edges(ContextEdges obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public NodeLabel nodeLabel(int j) { return nodeLabel(new NodeLabel(), j); }
  public NodeLabel nodeLabel(NodeLabel obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int nodeLabelLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public NodeType nodeType(int j) { return nodeType(new NodeType(), j); }
  public NodeType nodeType(NodeType obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int nodeTypeLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createContextGraph(FlatBufferBuilder builder,
      int edgesOffset,
      int nodeLabelOffset,
      int nodeTypeOffset) {
    builder.startObject(3);
    ContextGraph.addNodeType(builder, nodeTypeOffset);
    ContextGraph.addNodeLabel(builder, nodeLabelOffset);
    ContextGraph.addEdges(builder, edgesOffset);
    return ContextGraph.endContextGraph(builder);
  }

  public static void startContextGraph(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addEdges(FlatBufferBuilder builder, int edgesOffset) { builder.addOffset(0, edgesOffset, 0); }
  public static void addNodeLabel(FlatBufferBuilder builder, int nodeLabelOffset) { builder.addOffset(1, nodeLabelOffset, 0); }
  public static int createNodeLabelVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startNodeLabelVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addNodeType(FlatBufferBuilder builder, int nodeTypeOffset) { builder.addOffset(2, nodeTypeOffset, 0); }
  public static int createNodeTypeVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startNodeTypeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endContextGraph(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

