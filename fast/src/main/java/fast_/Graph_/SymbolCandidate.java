// automatically generated by the FlatBuffers compiler, do not modify

package fast_.Graph_;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SymbolCandidate extends Table {
  public static SymbolCandidate getRootAsSymbolCandidate(ByteBuffer _bb) { return getRootAsSymbolCandidate(_bb, new SymbolCandidate()); }
  public static SymbolCandidate getRootAsSymbolCandidate(ByteBuffer _bb, SymbolCandidate obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public SymbolCandidate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int symbolDummyNode() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String symbolName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer symbolNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer symbolNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public boolean isCorrect() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createSymbolCandidate(FlatBufferBuilder builder,
      int symbolDummyNode,
      int symbolNameOffset,
      boolean isCorrect) {
    builder.startObject(3);
    SymbolCandidate.addSymbolName(builder, symbolNameOffset);
    SymbolCandidate.addSymbolDummyNode(builder, symbolDummyNode);
    SymbolCandidate.addIsCorrect(builder, isCorrect);
    return SymbolCandidate.endSymbolCandidate(builder);
  }

  public static void startSymbolCandidate(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addSymbolDummyNode(FlatBufferBuilder builder, int symbolDummyNode) { builder.addInt(0, symbolDummyNode, 0); }
  public static void addSymbolName(FlatBufferBuilder builder, int symbolNameOffset) { builder.addOffset(1, symbolNameOffset, 0); }
  public static void addIsCorrect(FlatBufferBuilder builder, boolean isCorrect) { builder.addBoolean(2, isCorrect, false); }
  public static int endSymbolCandidate(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

